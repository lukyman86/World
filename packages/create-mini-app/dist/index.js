#!/usr/bin/env node
import e from"chalk";import{Command as u}from"commander";import g from"degit";import{execa as p}from"execa";import s from"fs-extra";import a from"node:path";import m from"prompts";var c=new u;async function y(){c.name("create-mini-app").description("Bootstrap a new Worldcoin Mini App project.").argument("[project-name]","The name for the new project directory").option("-i, --install","Install dependencies after cloning",!0).option("--no-install","Do not install dependencies after cloning").option("-a, --auth","Runs npx auth secret to set up next-auth",!0).parse(process.argv);let r=c.opts(),o=c.args[0];o||(o=(await m({type:"text",name:"projectName",message:"What is the name of your project?",initial:"my-world-app"})).projectName),o||(console.error(e.red("Project name is required.")),process.exit(1));let n=a.resolve(process.cwd(),o);if(s.existsSync(n)){let{overwrite:t}=await m({type:"confirm",name:"overwrite",message:`Directory ${e.cyan(o)} already exists. Overwrite?`,initial:!1});t||(console.log(e.yellow("Aborted.")),process.exit(0)),console.log(e.yellow(`Overwriting directory ${e.cyan(o)}...`)),await s.remove(n)}console.log(`Creating project ${e.cyan(o)}...`);try{let t=g("github:worldcoin/minikit-js/demo/next-15-template#main",{cache:!1,force:!0,verbose:!1});t.on("info",l=>{console.log(l.message)}),await t.clone(n),console.log(e.green("Template cloned successfully!"));let i=a.join(n,".env.sample"),d=a.join(n,".env.local");if(s.existsSync(i)&&(await s.copy(i,d),console.log(e.blue("Created .env.local from .env.sample"))),r.install){console.log("Installing dependencies...");try{await p("npm",["install"],{cwd:n,stdio:"inherit"}),console.log(e.green("Dependencies installed successfully!"))}catch(l){console.error(e.red("Failed to install dependencies:"),l),console.log(e.yellow("Please install dependencies manually by running:")),console.log(e.cyan(`  cd ${o}`)),console.log(e.cyan("  npm install"))}}if(r.auth)try{console.log("Setting up next-auth..."),await p("npx",["auth","secret"],{cwd:n,stdio:"inherit"}),console.log(e.green("next-auth setup successfully!"))}catch(l){console.error(e.yellow("Failed to setup next-auth, install will continue, you will need to run npx auth secret after install"),l)}console.log(`
${e.green("Success!")} Created ${e.cyan(o)} at ${e.cyan(n)}
`),console.log(`Inside that directory, you can run several commands:
`),console.log(e.cyan("  npm run dev")),console.log(`We suggest that you begin by typing:
`),console.log(e.cyan(`  cd ${o}`)),r.install||console.log(e.cyan("  npm install")),console.log(e.cyan(`  npm run dev
`)),console.log(e.blue("Check the .env.local file and follow the setup instructions in README.md")),process.exit(0)}catch(t){console.error(e.red("Failed to create project:"),t),await s.remove(n),process.exit(1)}}y().catch(r=>{console.error(e.red("An unexpected error occurred:"),r),process.exit(1)});
